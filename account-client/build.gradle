plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
    id 'net.corda.plugins.cordapp'
}


repositories {
    mavenCentral()
}

dependencies {
    // Corda dependencies.
    cordaCompile "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaCompile "$corda_core_release_group:corda-rpc:$corda_core_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"

    //Account dependencies
    cordaCompile "$confidential_id_release_group:ci-workflows:$confidential_id_release_version"
    cordaCompile "$accounts_release_group:accounts-workflows:$accounts_release_version"

    // CorDapp dependencies.
    cordapp project(":account-contracts")
    cordapp project(":account-workflows")



    compileOnly("org.springframework.boot:spring-boot-devtools")
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}


test {
    useJUnitPlatform()
}

task runServer(type: JavaExec){
    description = "Deploying Server"
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.mcxd.corda.account.client.RESTServer'
}